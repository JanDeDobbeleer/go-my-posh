name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get next version
        id: version
        run: |
          curl -L https://github.com/idc101/git-mkver/releases/download/v$MKVER/git-mkver-darwin-amd64-$MKVER.tar.gz | tar xvz
          sudo mv git-mkver /usr/local/bin
          echo "::set-output name=version::$(git mkver next)"
        env:
          MKVER: "1.1.1"
      - name: Create changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          skip-version-file: "true"
          output-file: "false"
          skip-commit: "true"
          fallback-version: ${{ steps.version.outputs.version }}
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
  artifacts:
    needs: release
    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: off
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
        - os: ubuntu-latest
          ARTIFACT: gmp-linux-amd64
          INSTALL_DEP: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        - os: macos-latest
          ARTIFACT: gmp-darwin-amd64
          INSTALL_DEP: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        - os: windows-latest
          ARTIFACT: gmp-windows-amd64.exe
          INSTALL_DEP: choco install dep
    defaults:
      run:
        working-directory: ${{ github.workspace }}/src/github.com/${{ github.repository }}
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        path: ./src/github.com/${{ github.repository }}
    - name: Install dependencies
      run: |
        ${{ matrix.INSTALL_DEP }}
        dep ensure -v
    - name: Build
      id: build
      run: go build -o ${{ matrix.ARTIFACT }}
      env:
        GOARCH: "amd64"
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./src/github.com/${{ github.repository }}/${{ matrix.ARTIFACT }}
        asset_name: ${{ matrix.ARTIFACT }}
        asset_content_type: application/zip

